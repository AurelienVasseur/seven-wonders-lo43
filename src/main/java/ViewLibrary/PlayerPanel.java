/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ViewLibrary;

import EnumLibrary.Action;
import ModelLibrary.CardLibrary.Card;
import ModelLibrary.PlayerLibrary.Deck;
import ModelLibrary.PlayerLibrary.Player;
import java.util.EnumSet;
import javax.swing.DefaultListModel;

/**
 *
 * @author Hicham, Aurélien
 */
public class PlayerPanel extends javax.swing.JPanel {
    private MainFrame frame;
    private int playerId;
    
    /**
     * Creates new form PlayerPanel
     * @param frame
     * @param playerId
     */
    public PlayerPanel(MainFrame frame, int playerId) {
        this.frame = frame;
        this.playerId = playerId;
        initComponents();
        this.jLabelPLayerId.setText("Player n° " + this.playerId);
        
        this.guiUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPLayerId = new javax.swing.JLabel();
        jButtonLeaderboard = new javax.swing.JButton();
        jButtonSelectCard = new javax.swing.JButton();
        jScrollPaneCards = new javax.swing.JScrollPane();
        jListCards = new javax.swing.JList<>();
        jLabelDeck = new javax.swing.JLabel();
        jScrollPaneActions = new javax.swing.JScrollPane();
        jListAction = new javax.swing.JList<>();
        jButtonSelectAction = new javax.swing.JButton();
        jLabelActions = new javax.swing.JLabel();
        jScrollPaneCardsPlayed = new javax.swing.JScrollPane();
        jListCardsPlayed = new javax.swing.JList<>();
        jLabelCardsPlayed = new javax.swing.JLabel();
        jLabelWonderName = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jButtonValidate = new javax.swing.JButton();
        jLabelCoins = new javax.swing.JLabel();
        jLabelCoinsValue = new javax.swing.JLabel();

        jLabelPLayerId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPLayerId.setText("Player n° ID");

        jButtonLeaderboard.setText("Display Leaderboard");
        jButtonLeaderboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLeaderboardMouseClicked(evt);
            }
        });

        jButtonSelectCard.setText("Select Card");
        jButtonSelectCard.setEnabled(false);
        jButtonSelectCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectCardActionPerformed(evt);
            }
        });

        jListCards.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListCards.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListCardsValueChanged(evt);
            }
        });
        jScrollPaneCards.setViewportView(jListCards);

        jLabelDeck.setText("Deck");

        jListAction.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListAction.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListActionValueChanged(evt);
            }
        });
        jScrollPaneActions.setViewportView(jListAction);

        jButtonSelectAction.setText("Select Action");
        jButtonSelectAction.setEnabled(false);
        jButtonSelectAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionActionPerformed(evt);
            }
        });

        jLabelActions.setText("Actions");

        jListCardsPlayed.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneCardsPlayed.setViewportView(jListCardsPlayed);

        jLabelCardsPlayed.setText("Cards played");

        jLabelWonderName.setText("Wonder's Name");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setText("(MONTRER L'ETAT DE LA MERVEILLE)");

        jButtonValidate.setText("Validate");
        jButtonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateActionPerformed(evt);
            }
        });

        jLabelCoins.setText("Coins : ");

        jLabelCoinsValue.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jLabelWonderName))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabel1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPaneCardsPlayed, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelCardsPlayed)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jButtonSelectCard, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jScrollPaneCards, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addComponent(jLabelDeck)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonValidate, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jButtonLeaderboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPLayerId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPaneActions)
                                    .addComponent(jButtonSelectAction, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabelActions))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCoins)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelCoinsValue))))
                            .addComponent(jSeparator2))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabelPLayerId))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCoins)
                            .addComponent(jLabelCoinsValue))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDeck)
                    .addComponent(jLabelActions)
                    .addComponent(jLabelCardsPlayed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPaneActions, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(jScrollPaneCards, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSelectCard)
                            .addComponent(jButtonSelectAction))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonValidate))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPaneCardsPlayed, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelWonderName)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButtonLeaderboard)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLeaderboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLeaderboardMouseClicked
        // TODO add your handling code here:
        this.frame.displayLeaderboard();
    }//GEN-LAST:event_jButtonLeaderboardMouseClicked

    private void jButtonSelectActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionActionPerformed
        // Récupération de l'action sélectionnée
        Action actionSelected = Action.valueOf(this.jListAction.getSelectedValue());
        // Sélection de l'action
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        player.setActionSelected(actionSelected);
        this.frame.gameManager.setPlayer(player, this.playerId);
    }//GEN-LAST:event_jButtonSelectActionActionPerformed

    private void jButtonSelectCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectCardActionPerformed
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        // Récupération de la carte sélectionnée
        String nameCardSelected = this.jListCards.getSelectedValue();
        Card cardSelected = player.getCardDeckByName(nameCardSelected);
        // Sélection de la carte
        player.setCardSelected(cardSelected);
        this.frame.gameManager.setPlayer(player, this.playerId);
    }//GEN-LAST:event_jButtonSelectCardActionPerformed

    
    private void jListActionValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListActionValueChanged
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        // activer le bouton permettant de sélectionner une action
        if(this.jButtonSelectAction.isEnabled() == false && !player.getIsValidate()) {
            this.jButtonSelectAction.setEnabled(true);
        }
    }//GEN-LAST:event_jListActionValueChanged

    private void jListCardsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListCardsValueChanged
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        // activer le bouton permettant de sélectionner une carte
        if(this.jButtonSelectCard.isEnabled() == false && !player.getIsValidate()) {
            this.jButtonSelectCard.setEnabled(true);
        }
    }//GEN-LAST:event_jListCardsValueChanged

    private void jButtonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateActionPerformed
        // Désactivation des boutons
        this.jButtonSelectAction.setEnabled(false);
        this.jButtonSelectCard.setEnabled(false);
        this.jButtonValidate.setEnabled(false);
        
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        player.setIsValidate(true);
        this.frame.gameManager.setPlayer(player, this.playerId);
        
        // On regarde si tous les joueurs ont validés 
        if(this.frame.gameManager.checkIfPlayersValidate() == true) {
            // On joue le tour
            this.frame.gameManager.playTurn();
            // GUI update
            this.frame.guiUpdatePlayersPanel();
        }
    }//GEN-LAST:event_jButtonValidateActionPerformed

    public void guiUpdate() {
        Player player = this.frame.gameManager.getPlayer(this.playerId);
        Deck deck = player.getDeck();
        Deck cardsPlayed = player.getCardsPlayed();
        
        this.jLabelCoinsValue.setText(Integer.toString(player.getScore().getCoin().getValue()));
        
        // Initialisation de la liste des cartes du deck
        DefaultListModel modelCards = new DefaultListModel();
        for(int i=0; i<deck.getListCards().size(); i++) {
            modelCards.addElement(deck.getListCards().get(i).getName());
        }
        this.jListCards.setModel(modelCards);
        
        // Initialisation de la liste des cartes jouées - A FINIR !!
        DefaultListModel modelCardsPlayed = new DefaultListModel();
        for(int i=0; i<cardsPlayed.getListCards().size(); i++) {
            modelCardsPlayed.addElement(cardsPlayed.getListCards().get(i).getName());
        }
        this.jListCardsPlayed.setModel(modelCardsPlayed);
        
        // Initialisation de la liste des actions
        DefaultListModel modelActions = new DefaultListModel();
        EnumSet.allOf(Action.class).forEach(action -> modelActions.addElement(action.toString()));
        this.jListAction.setModel(modelActions);
        
        // Activation et désactivation des boutons
        this.jButtonSelectCard.setEnabled(false);
        this.jButtonSelectAction.setEnabled(false);
        this.jButtonValidate.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLeaderboard;
    private javax.swing.JButton jButtonSelectAction;
    private javax.swing.JButton jButtonSelectCard;
    private javax.swing.JButton jButtonValidate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelActions;
    private javax.swing.JLabel jLabelCardsPlayed;
    private javax.swing.JLabel jLabelCoins;
    private javax.swing.JLabel jLabelCoinsValue;
    private javax.swing.JLabel jLabelDeck;
    private javax.swing.JLabel jLabelPLayerId;
    private javax.swing.JLabel jLabelWonderName;
    private javax.swing.JList<String> jListAction;
    private javax.swing.JList<String> jListCards;
    private javax.swing.JList<String> jListCardsPlayed;
    private javax.swing.JScrollPane jScrollPaneActions;
    private javax.swing.JScrollPane jScrollPaneCards;
    private javax.swing.JScrollPane jScrollPaneCardsPlayed;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
